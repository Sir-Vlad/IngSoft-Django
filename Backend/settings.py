"""
Django settings for Backend project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "RZ3+abTyIyDSVMridEGBTe6Al6PwXsXA9jk9qTNVnJlJHSLUiNE9rjd8/30boQUk"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["sirvlad33.pythonanywhere.com", "localhost"]

# Application definition

INSTALLED_APPS = [
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.import_export",
    # optional, if django-import-export package is used
    "unfold.contrib.guardian",
    # optional, if django-guardian package is used
    "unfold.contrib.simple_history",
    # optional, if django-simple-history package is used
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "Backend_IngSoft.apps.BackendIngsoftConfig",  # mia app
    "django_extensions",  # serve per il grafico del db
    "drf_extra_fields",  # campi addizionali per i serializers
    "drf_yasg",  # documentazione delle api
    "rest_framework_simplejwt",  # token JWT di autenticazione
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "Backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Backend.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "it"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = "/home/SirVlad33/Backend/static/"

# Path per le immagini
MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# https://github.com/unfoldadmin/django-unfold?tab=readme-ov-file#available-settingspy-options
UNFOLD = {
    "SITE_HEADER": _("Amministrazione"),
    "SITE_TITLE": _("Amministrazione"),
    "SITE_SYMBOL": "settings",
    "SITE_URL": "/",
    "THEME": "dark",
    "SHOW_VIEW_ON_SITE": False,
    "SIDEBAR": {
        "navigation": [
            {
                "title": _("Gestione Personale"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Utenti"),
                        "icon": "manage_accounts",
                        "link": reverse_lazy("admin:auth_user_changelist"),
                        "permissions": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Gruppi"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                        "permissions": lambda request: request.user.is_superuser,
                    },
                ],
            },
            {
                "title": _("Utenti"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Clienti"),
                        "icon": "person",
                        "link": reverse_lazy("admin:Backend_IngSoft_utente_changelist"),
                    },
                ],
            },
            {
                "title": _("Concessionari"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Concessionari"),
                        "icon": "add_business",
                        "link": reverse_lazy(
                            "admin:Backend_IngSoft_concessionario_changelist"
                        ),
                    },
                ],
            },
            {
                "title": _("Gestione"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Modello Auto"),
                        "icon": "drive_eta",
                        "link": reverse_lazy(
                            "admin:Backend_IngSoft_modelloauto_changelist"
                        ),
                    },
                    {
                        "title": _("Optional"),
                        "icon": "build",
                        "link": reverse_lazy(
                            "admin:Backend_IngSoft_optional_changelist"
                        ),
                    },
                    {
                        "title": _("Sconti"),
                        "icon": "percent",
                        "link": reverse_lazy("admin:Backend_IngSoft_sconto_changelist"),
                    },
                    {
                        "title": _("Preventivi"),
                        "icon": "request_quote",
                        "link": reverse_lazy(
                            "admin:Backend_IngSoft_preventivo_changelist"
                        ),
                    },
                    {
                        "title": _("Auto Usate"),
                        "icon": "drive_eta",
                        "link": reverse_lazy(
                            "admin:Backend_IngSoft_autousata_changelist"
                        ),
                    },
                ],
            },
        ],
    },
}

# setting email
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp-mail.outlook.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "IngegneriaSoftwere@outlook.it"
EMAIL_HOST_PASSWORD = "rootAdmin2001"

# logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "debug.log"),
            "formatter": "verbose",
        },
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file", "console"],
            "level": "INFO",
            "propagate": True,
        },
    },
}

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
}

AUTHENTICATION_BACKENDS = (
    "Backend_IngSoft.auth_backend.ApiUserBackend",
    "django.contrib.auth.backends.ModelBackend",
)
